<?php
declare(strict_types=1);

namespace rikmeijer\Teach\Beans\Generated;

use TheCodingMachine\TDBM\ResultIterator;
use TheCodingMachine\TDBM\AlterableResultIterator;
use Ramsey\Uuid\Uuid;
use rikmeijer\Teach\Beans\Les;
use TheCodingMachine\TDBM\AbstractTDBMObject;

/*
 * This file has been automatically generated by TDBM.
 * DO NOT edit this file, as it might be overwritten.
 * If you need to perform changes, edit the Module class instead!
 */

/**
 * The AbstractModule class maps the 'module' table in database.
 */
abstract class AbstractModule extends AbstractTDBMObject implements \JsonSerializable
{
    /**
     * The constructor takes all compulsory arguments.
     *
     * @param string $naam
     */
    public function __construct(string $naam)
    {
        parent::__construct();
        $this->setNaam($naam);
    }

    /**
     * The getter for the "naam" column.
     *
     * @return string
     */
    public function getNaam() : string
    {
        return $this->get('naam', 'module');
    }

    /**
     * The setter for the "naam" column.
     *
     * @param string $naam
     */
    public function setNaam(string $naam) : void
    {
        $this->set('naam', $naam, 'module');
    }

    /**
     * Returns the list of Les pointing to this bean via the module_naam column.
     *
     * @return Les[]|AlterableResultIterator
     */
    public function getLes() : AlterableResultIterator
    {
        return $this->retrieveManyToOneRelationshipsStorage('les', 'fk_lesmodule', 'les', ['les.module_naam' => $this->get('naam', 'module')]);
    }


    /**
     * Serializes the object for JSON encoding.
     *
     * @param bool $stopRecursion Parameter used internally by TDBM to stop embedded objects from embedding other objects.
     * @return array
     */
    public function jsonSerialize($stopRecursion = false)
    {
        $array = [];
        $array['naam'] = $this->getNaam();


        return $array;
    }

    /**
     * Returns an array of used tables by this bean (from parent to child relationship).
     *
     * @return string[]
     */
    protected function getUsedTables() : array
    {
        return [ 'module' ];
    }
}
