<?php
declare(strict_types=1);

namespace rikmeijer\Teach\Beans\Generated;

use TheCodingMachine\TDBM\ResultIterator;
use TheCodingMachine\TDBM\AlterableResultIterator;
use Ramsey\Uuid\Uuid;
use rikmeijer\Teach\Beans\User;
use TheCodingMachine\TDBM\AbstractTDBMObject;

/*
 * This file has been automatically generated by TDBM.
 * DO NOT edit this file, as it might be overwritten.
 * If you need to perform changes, edit the Useremailaddress class instead!
 */

/**
 * The AbstractUseremailaddress class maps the 'useremailaddresses' table in database.
 */
abstract class AbstractUseremailaddress extends AbstractTDBMObject implements \JsonSerializable
{
    /**
     * The constructor takes all compulsory arguments.
     *
     * @param string $email
     * @param User $userid
     */
    public function __construct(string $email, User $userid)
    {
        parent::__construct();
        $this->setEmail($email);
        $this->setUserid($userid);
    }

    /**
     * The getter for the "email" column.
     *
     * @return string
     */
    public function getEmail() : string
    {
        return $this->get('email', 'useremailaddresses');
    }

    /**
     * The setter for the "email" column.
     *
     * @param string $email
     */
    public function setEmail(string $email) : void
    {
        $this->set('email', $email, 'useremailaddresses');
    }

    /**
     * Returns the User object bound to this object via the userid column.
     *
     * @return User
     */
    public function getUserid(): User
    {
        return $this->getRef('FK_BB2C241F132696E', 'useremailaddresses');
    }

    /**
     * The setter for the User object bound to this object via the userid column.
     *
     * @param User $object
     */
    public function setUserid(User $object) : void
    {
        $this->setRef('FK_BB2C241F132696E', $object, 'useremailaddresses');
    }

    /**
     * Returns the list of User pointing to this bean via the email column.
     *
     * @return User[]|AlterableResultIterator
     */
    public function getUsers() : AlterableResultIterator
    {
        return $this->retrieveManyToOneRelationshipsStorage('users', 'primary_email', 'users', ['users.email' => $this->get('email', 'useremailaddresses')]);
    }


    /**
     * Serializes the object for JSON encoding.
     *
     * @param bool $stopRecursion Parameter used internally by TDBM to stop embedded objects from embedding other objects.
     * @return array
     */
    public function jsonSerialize($stopRecursion = false)
    {
        $array = [];
        $array['email'] = $this->getEmail();
        if (!$stopRecursion) {
            $object = $this->getUserid();
            $array['userid'] = $object ? $object->jsonSerialize(true) : null;
        }


        return $array;
    }

    /**
     * Returns an array of used tables by this bean (from parent to child relationship).
     *
     * @return string[]
     */
    protected function getUsedTables() : array
    {
        return [ 'useremailaddresses' ];
    }

    /**
     * Method called when the bean is removed from database.
     *
     */
    protected function onDelete() : void
    {
        parent::onDelete();
        $this->setRef('FK_BB2C241F132696E', null, 'useremailaddresses');
    }
}
